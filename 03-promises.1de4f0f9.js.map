{"mappings":"gfAAA,IAMIA,EANJC,EAAAC,EAAA,SACMC,EAAcC,SAASC,cAAc,UACrCC,EAAOF,SAASC,cAAc,QAC9BE,EAAYH,SAASC,cAAc,uBACnCG,EAAOJ,SAASC,cAAc,sBAC9BI,EAASL,SAASC,cAAc,wBA6CtCC,EAAKI,iBAAiB,UA9BC,SAAAC,GACrBA,EAAMC,iBACNT,EAAYU,UAAW,EACvB,IAAIC,EAAQC,SAASR,EAAUS,OACzBC,EAAYF,SAASP,EAAKQ,OAC1BE,EAAiBT,EAAOO,MAC9BhB,EAAqBc,EACrB,IAAIK,EAAW,EACTC,EAAkB,SAAAC,G,OArBJ,SAACF,EAAUE,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEP,WAAUE,UAEpBM,EAAO,CAAER,WAAUE,S,GAEpBrB,E,IAaH6B,CAAcV,IAAYE,GACvBS,MAAK,SAAAd,GACJf,EAAA8B,OAAOC,QACL,uBAA8CC,OAArBjB,EAAMG,SAAS,QAAkBc,OAAZjB,EAAMK,MAAM,M,IAG7Da,OAAM,SAAAC,GACLlC,EAAA8B,OAAOK,QACL,sBAA2CH,OAArBE,EAAMhB,SAAS,QAAkBc,OAAZE,EAAMd,MAAM,M,IAG1DgB,SAAQ,WAGP,OAFAhB,GAAgBJ,EAChBjB,EAAqBiB,EACdE,GAAYD,EACfE,EAAgBC,GACflB,EAAYU,UAAW,C,KAElCO,EAAgBN,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst btnPromises = document.querySelector('button');\nconst form = document.querySelector('form');\nconst delayTime = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nlet delayFromEachOther;\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delayFromEachOther);\n  });\n};\n\nconst createPromises = event => {\n  event.preventDefault();\n  btnPromises.disabled = true;\n  let delay = parseInt(delayTime.value);\n  const delayStep = parseInt(step.value);\n  const promisesAmount = amount.value;\n  delayFromEachOther = delay;\n  let position = 1;\n  const promisesHandler = delay =>\n    createPromise(position++, delay)\n      .then(value => {\n        Notify.success(\n          `✅ Fulfilled promise ${value.position} in ${value.delay}ms`\n        );\n      })\n      .catch(error => {\n        Notify.failure(\n          `❌ Rejected promise ${error.position} in ${error.delay}ms`\n        );\n      })\n      .finally(() => {\n        delay = delay + delayStep;\n        delayFromEachOther = delayStep;\n        return position <= promisesAmount\n          ? promisesHandler(delay)\n          : (btnPromises.disabled = false);\n      });\n  promisesHandler(delay);\n};\n\nform.addEventListener('submit', createPromises);\n"],"names":["$ce04d3a99e08e73b$var$delayFromEachOther","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$btnPromises","document","querySelector","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$delayTime","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","event","preventDefault","disabled","delay1","parseInt","value","delayStep","promisesAmount","position","promisesHandler","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","Notify","success","concat","catch","error","failure","finally"],"version":3,"file":"03-promises.1de4f0f9.js.map"}